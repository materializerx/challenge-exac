/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ETHPoolV2, ETHPoolV2Interface } from "../../contracts/ETHPoolV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimableRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardCalculableAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastDepositTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositReward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a7c8061007e6000396000f3fe6080604052600436106100965760003560e01c80635ec2dc8d116100695780638da5cb5b1161004e5780638da5cb5b14610163578063d0e30db01461018b578063f2fde38b1461019357600080fd5b80635ec2dc8d14610146578063715018a61461014e57600080fd5b80630359fea91461009b5780632a343709146100c45780633ccfd60b146100da5780635e5c06e2146100e4575b600080fd5b3480156100a757600080fd5b506100b160015481565b6040519081526020015b60405180910390f35b3480156100d057600080fd5b506100b160025481565b6100e26101b3565b005b3480156100f057600080fd5b506101266100ff3660046109b9565b60066020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016100bb565b6100e26103d4565b34801561015a57600080fd5b506100e26104f4565b34801561016f57600080fd5b506000546040516001600160a01b0390911681526020016100bb565b6100e261055a565b34801561019f57600080fd5b506100e26101ae3660046109b9565b610751565b33600081815260066020526040902060030154158015906101e857506005543360009081526006602052604090206003015411155b156102b0573360009081526006602052604081206002015460045460015491929161021390846109ff565b61021d9190610a1e565b905080600160008282546102319190610a40565b90915550503360009081526006602052604081206001018054839290610258908490610a57565b9091555050336000908152600660205260408120805484929061027c908490610a57565b9091555050336000908152600660205260408120600201819055600480548492906102a8908490610a40565b909155505050505b336000908152600660205260408120805460018201546002909201549092816102d98486610a57565b6102e39190610a57565b9050600081116103455760405162461bcd60e51b815260206004820152602260248201527f4572726f723a20776974686472617761626c6520616d6f756e74206973205a45604482015261524f60f01b60648201526084015b60405180910390fd5b33600090815260066020526040812081815560018101829055600280820183905560039091019190915554849061037d908490610a40565b6103879190610a40565b60025560408051338152602081018390527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65910160405180910390a16103cd3382610833565b5050505050565b6000546001600160a01b0316331461042e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033c565b346000811161047f5760405162461bcd60e51b815260206004820152601d60248201527f4572726f723a206465706f73697420616d6f756e74206973205a45524f000000604482015260640161033c565b34600160008282546104919190610a57565b909155505042600555600354600480546000906104af908490610a57565b90915550506000600355604080513381523460208201527fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29910160405180910390a150565b6000546001600160a01b0316331461054e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033c565b6105586000610951565b565b34600081116105ab5760405162461bcd60e51b815260206004820152601d60248201527f4572726f723a206465706f73697420616d6f756e74206973205a45524f000000604482015260640161033c565b33600081815260066020526040902060030154158015906105e057506005543360009081526006602052604090206003015411155b156106a8573360009081526006602052604081206002015460045460015491929161060b90846109ff565b6106159190610a1e565b905080600160008282546106299190610a40565b90915550503360009081526006602052604081206001018054839290610650908490610a57565b90915550503360009081526006602052604081208054849290610674908490610a57565b9091555050336000908152600660205260408120600201819055600480548492906106a0908490610a40565b909155505050505b33600090815260066020526040812060020180543492906106ca908490610a57565b909155505033600090815260066020526040812042600390910155600280543492906106f7908490610a57565b9250508190555034600360008282546107109190610a57565b9091555050604080513381523460208201527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a15050565b6000546001600160a01b031633146107ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033c565b6001600160a01b0381166108275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161033c565b61083081610951565b50565b804710156108835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161033c565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146108d0576040519150601f19603f3d011682016040523d82523d6000602084013e6108d5565b606091505b505090508061094c5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161033c565b505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156109cb57600080fd5b81356001600160a01b03811681146109e257600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610a1957610a196109e9565b500290565b600082610a3b57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610a5257610a526109e9565b500390565b60008219821115610a6a57610a6a6109e9565b50019056fea164736f6c634300080d000a";

type ETHPoolV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHPoolV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHPoolV2__factory extends ContractFactory {
  constructor(...args: ETHPoolV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ETHPoolV2> {
    return super.deploy(overrides || {}) as Promise<ETHPoolV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ETHPoolV2 {
    return super.attach(address) as ETHPoolV2;
  }
  override connect(signer: Signer): ETHPoolV2__factory {
    return super.connect(signer) as ETHPoolV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHPoolV2Interface {
    return new utils.Interface(_abi) as ETHPoolV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHPoolV2 {
    return new Contract(address, _abi, signerOrProvider) as ETHPoolV2;
  }
}
